version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dbviewer_demo
    restart: unless-stopped
    environment:
      - RAILS_ENV=production
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - SOLID_QUEUE_IN_PUMA=true
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=dbviewer_demo_production
      - POSTGRES_CACHE_DB=dbviewer_demo_production_cache
      - POSTGRES_QUEUE_DB=dbviewer_demo_production_queue
      - POSTGRES_CABLE_DB=dbviewer_demo_production_cable
    ports:
      - "3000:3000"
    volumes:
      - dbviewer_demo_storage:/rails/storage
    networks:
      - dbviewer_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16
    container_name: dbviewer_demo_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=dbviewer_demo_production
    volumes:
      - dbviewer_demo_postgres:/var/lib/postgresql/data
    networks:
      - dbviewer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dbviewer_network:
    driver: bridge

volumes:
  dbviewer_demo_storage:
    driver: local
  dbviewer_demo_postgres:
    driver: local
